✅REST API란?
REST API는 REST (Representational State Transfer) 원칙을 따르는 웹 API
웹 자원을 URL로 표현하고, **HTTP 요청 방식(GET, POST 등)**으로 데이터를 주고받는 방식.

✅구성 요소
1. 자원(Resource)
→ 웹에서 다루는 데이터. 예: 유저 정보, 게시글, 사진 등
→ URL로 표현.
예시:
https://api.example.com/users

2. 행위(Verb)
→ HTTP 메서드로 동작을 정의

메서드
GET: 데이터 조회.	ex)유저 정보 가져오기
POST: 데이터 생성.	ex)새 글 등록하기
PUT: 데이터 전체 수정.	ex)유저 정보 전체 변경
PATCH: 데이터 일부 수정.	ex)비밀번호만 변경
DELETE:	데이터 삭제.	ex)게시글 삭제

3. 표현(Representation)
→ 주고받는 데이터 형식 (보통 JSON, 때때로 XML)
→ 사람이 읽기 쉬운 구조로 정보를 전달.

✅간단한 예시
→ 유저 목록 가져오기 (GET)
GET https://api.example.com/users

→ 응답:
[
  { "id": 1, "name": "Geonho" },
  { "id": 2, "name": "Yunseong" }
]

→ 유저 추가하기 (POST)
POST https://api.example.com/users
Content-Type: application/json

{
  "name": "New User"
}
# 클라우드와 AWS의 기본 개념

### 클라우드
클라우드 서비스란 컴퓨터가 가상의 공간에 있다고 가정하고 자유롭게 쓰는 것이다. (말이 가상의 공간이지, 사실 실제로 매우 큰 데이터센터를 지어놓고 프로그램으로 그 리소스를 갖다 쓸 수 있게 하는 것이다.)  
  
우리가 흔히 하는 클라우드 서비스는 구글 드라이브가 있겠으나, 이는 클라우드 서비스 중에서 SaaS(Software as a Service)라고 클라우드 하드웨어, 운영체제, 프로그램까지 다른 곳에 있고 서비스만 가상 공간에서 갖다 쓰는 것이다.  
  
그러나 AWS같은 경우는 기본적으로 IaaS(Infrastructure as a service)이다. 즉, 가상의(해당 회사의 데이터센터의) 하드웨어만 제공받으면 그 위에 올라가는 운영체제나 프로그램등을 모두 자유롭게 서비스로 이용하는 것이다.

#### 클라우드 서비스의 장점

- **확장성 (scalability)**
  - 내가 데이터센터를 직접 구축할 필요가 없으니 필요한 만큼 쓰다가 더 많은 리소스가 필요하면 그 만큼 돈만 내면 되는 것이다,
  - 빠르게 원하는 만큼의 서비스 확징이 가능하다.
- **탄력성 (elasticity)**
  - 서비스가 특정 시기에만 트래픽이 몰릴 수도 있다.
  - 이러한 경우 클라우드 서비스를 사용하면 사람들이 많이 접속할 때만 리소스를 많이 썼다가 사람들이 빠지면 다시 되돌릴 수도 있다.
- **높은 접근성(high availability)**
  - 클라우드 서비스를 이용하면 언제 어디서든 해당 클라우드에 접근하거나 클라우드가 제공하는 서비스를 사용할 수 있다.
- **장애 허용성 (fault tolerance)**
  - 보통 클라우드 서비스 제공자들은 우리가 저장한 데이터를 한 곳에만 저장하지 않고, 여러 공간(다른 데이터센터)에 나누어 저장한다.
  - 이럴 경우 한 곳에서 자연재해가 발생하더라도 우리의 데이터는 안전하다.

<br>
